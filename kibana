GET fias_klade/_mapping
GET fias_address/_search
GET fias_klade/_search
{
  "query": {"term": {
    "ao_guid": {
      "value": "1ccfdc3c-be0f-4e42-ab4d-98f90de972d9"
    }
  }}
}


GET fias_klade/_search
{
  "query": {"match": {
    "off_name": "Сущинского"
  }}
}

GET fias_address/_search
{
  "query": {"match": {
    "off_name": "Сущинского"
  }}
}

GET fias_address/_search
{
  "query": {"term": {
    "formal_name": {
      "value": "горького"
    }
  }}
}

GET fias_address/_search
{
  "query": {"bool": {"must": [
    {"match": {
      "formal_name": "горького"
    }},
    {"match": {
      "region_code": "77"
    }},
    {"match": {
      "curr_status": "0"
    }}
  ]}}
}
# Москва, Ильинка 10/2
GET fias_houses/_search
{
  "query": {
    "bool": {
      "must": [
        {
          "match": {
            "house_num": "10/2"
          }
        },
        {
          "term": {
            "ao_guid": {
              "value": "a04d3f4d-b595-4675-8f3e-7091cc2eb692"
            }
          }
        }
      ]
    }
  }
}

GET fias_address/_search
{
  "query": {"bool": {"must": [
    {"match": {
      "region_code": "13"
    }},
    {"match": {
      "ao_level": "4 "
    }},
    {"match": {
      "curr_status": "0"
    }}
  ]}}
}

GET fias_houses/_count
{
  "query": {"bool": {"must": [
    {"match": {
      "region_code": "13"
    }},
    {"range": {
      "end_date": {
        "gte": "now"
      }
    }}
  ]}}
}


GET fias_address/_search
{
  "query": {"bool": {"must": [
    {"match": {
      "formal_name": "старая площадь"
    }},
    {"match": {
      "parent_guid": "0c5b2444-70a0-4932-980c-b4dc0d3f02b5"
    }},
    {"match": {
      "curr_status": "0"
    }}
  ]}}
}


# дп Кокошкино, Москва (AO leve 6)
GET fias_address/_search
{
  "query": {"bool": {"must": [
    {"match": {
      "ao_guid": "1b99dee9-c980-414a-aa58-f153fed6a974"
    }}, {"match": {
      "curr_status": "0"
    }}
  ]}}
}

# п Кокошкино, Москва (АО Level 3)
GET fias_address/_search
{
  "query": {"bool": {"must": [
    {"match": {
      "ao_guid": "327d3311-1563-4a70-aa5f-60c73c1a22b1"
    }},
    {"match": {
      "curr_status": "0"
    }}
  ]}}
}

# Москва (АО Level 1)
GET fias_address/_search
{
  "query": {"bool": {"must": [
    {"match": {
      "ao_guid": "0c5b2444-70a0-4932-980c-b4dc0d3f02b5"
    }}
  ]}}
}


GET fias_klade/_search
{
  "query": {
    "bool": {
      "must": [
        {
          "match": {
            "off_name": "Сущинского"
          }
        }
      ]
    }
  }
}

# findByNameAndActualityStatusAndLiveStatusAndCurrentStatus
GET fias_klade/_search
{
  "query": {
    "bool": {
      "must": [
        {
          "query_string": {
            "query": "Сущинского",
            "fields": [
              "formal_name^1.0"
            ],
            "type": "best_fields",
            "default_operator": "and",
            "max_determinized_states": 10000,
            "enable_position_increments": true,
            "fuzziness": "AUTO",
            "fuzzy_prefix_length": 0,
            "fuzzy_max_expansions": 50,
            "phrase_slop": 0,
            "escape": false,
            "auto_generate_synonyms_phrase_query": true,
            "fuzzy_transpositions": true,
            "boost": 1
          }
        },
        {
          "query_string": {
            "query": "1",
            "fields": [
              "act_status^1.0"
            ],
            "type": "best_fields",
            "default_operator": "and",
            "max_determinized_states": 10000,
            "enable_position_increments": true,
            "fuzziness": "AUTO",
            "fuzzy_prefix_length": 0,
            "fuzzy_max_expansions": 50,
            "phrase_slop": 0,
            "escape": false,
            "auto_generate_synonyms_phrase_query": true,
            "fuzzy_transpositions": true,
            "boost": 1
          }
        },
        {
          "query_string": {
            "query": "1",
            "fields": [
              "live_status^1.0"
            ],
            "type": "best_fields",
            "default_operator": "and",
            "max_determinized_states": 10000,
            "enable_position_increments": true,
            "fuzziness": "AUTO",
            "fuzzy_prefix_length": 0,
            "fuzzy_max_expansions": 50,
            "phrase_slop": 0,
            "escape": false,
            "auto_generate_synonyms_phrase_query": true,
            "fuzzy_transpositions": true,
            "boost": 1
          }
        },
        {
          "query_string": {
            "query": "0",
            "fields": [
              "curr_status^1.0"
            ],
            "type": "best_fields",
            "default_operator": "and",
            "max_determinized_states": 10000,
            "enable_position_increments": true,
            "fuzziness": "AUTO",
            "fuzzy_prefix_length": 0,
            "fuzzy_max_expansions": 50,
            "phrase_slop": 0,
            "escape": false,
            "auto_generate_synonyms_phrase_query": true,
            "fuzzy_transpositions": true,
            "boost": 1
          }
        }
      ]
    }
  }
}



GET house-1/_search
{
  "query": {"exists": {"field": "cad_num"}}
}

POST _reindex?slices=3&refresh
{
  "source": {
    "index": "fias_addrobj"
  },
  "dest": {
    "index": "fias_klade"
  }
}

GET fias_addrobj/_count

GET addr_obj_new/_count

GET _tasks?actions=*reindex
GET _tasks/ByHpNTcITOKv51msEb6iVQ:339

POST _tasks/_cancel?actions=*reindex

GET fias_houses/_refresh
GET fias_houses/_count
DELETE fias_houses

# 20 500 559 (20:55)
GET fias_house/_refresh
GET fias_house/_count

DELETE fias_street
#street normalized




#houses
PUT houses/
{
    "settings" : {
        "codec": "best_compression", 
        "number_of_shards" : 1,
        "number_of_replicas" : 0,
        "index.refresh_interval": "-1"
    },
     "mappings" : {
      "properties" : {
        
        "ao_guid" : {
          "type" : "keyword"
        },
        "house_id" : {
          "type" : "keyword"
        },
        "house_guid" : {
            "type" : "keyword"
        },
        "counter" : {
          "type" : "long"
        },
        "div_type" : {
          "type" : "short"
        },
        "est_status" : {
          "type" : "byte"
        },
        "stat_status" : {
          "type" : "short"
        },
        "house_num" : {
          "type" : "keyword"
        },
        "build_num" : {
          "type" : "keyword"
        },
        "str_num" : {
          "type" : "keyword"
        },
        "str_status" : {
          "type" : "byte"
        },
        "ifns_fl" : {
          "type" : "short"
        },
        "terr_ifns_fl" : {
          "type" : "short"
        },
        "ifns_ul" : {
          "type" : "short"
        },
        "terr_ifns_ul" : {
          "type" : "short"
        },
        "okato" : {
          "type" : "long"
        },
        "oktmo" : {
          "type" : "long"
        },
        "postal_code" : {
          "type" : "long"
        },
        "region_code" : {
          "type" : "byte"
        },
        "start_date" : {
          "type" : "date"
        },
        "end_date" : {
          "type" : "date"
        },
        "update_date" : {
          "type" : "date"
        },
        "norm_doc" : {
          "type" : "keyword"
        },
        "cad_num" : {
          "type" : "keyword"
        }
      }  
  } 
}

GET fias_klade/_search
{
  "query": {
    "bool": {
      "must": [
        {
          "match": {
            "off_name": "Саранск"
          }
        },
        {"match": {
          "cent_status": "2"
        }},
        {"match": {
          "curr_status": "0"
        }}
      ]
    }
  }
}

GET fias_klade/_search
{
  "query": {
    "bool": {
      "must": [
        {
          "match": {
            "off_name": "70 лет октября"
          }
        },
        {
          "match": {
            "ao_level": "7"
          }
        },
        {"match": {
          "region_code": "13"
        }},
        {"match": {
          "parent_guid": "1ccfdc3c-be0f-4e42-ab4d-98f90de972d9"
        }},
        {"match": {
          "curr_status": "0"
        }},
        {"match": {
          "act_status": "1"
        }},
        {"range": {
          "end_date": {
            "gte": "now"
          }
        }}
      ]
    }
  }
}

GET fias_klade/_search
{
  "query": {"match": {
    "ao_guid": "8ffad5fe-c0d5-4729-821f-fe84ab68a404"
  }}
}

# москва Шаболовка
GET fias_klade/_search
{
  "query": {
    "bool": {
      "must": [
        {
          "match": {
            "off_name": "шаболовка"
          }
        },
        {"match": {
          "region_code": "77"
        }},
        {"match": {
          "curr_status": "0"
        }}
      ]
    }
  }
}

# Москва
GET fias_klade/_search
{
  "query": {
    "bool": {
      "must": [
        {
          "match": {
            "ao_guid": "0c5b2444-70a0-4932-980c-b4dc0d3f02b5"
          }
        }
        
      ]
    }
  }
}

# Тверская 
GET fias_klade/_search
{
  "query": {"bool": {"must": [
    {"match": {
      "off_name": "тверская"
    }},
    {"match": {
      "region_code": "77"
    }},
    {"match": {
      "curr_status": "0"
    }},
    {"match": {
      "short_name": "ул"
    }},
    {"match": {
      "code": "77000000000287700"
    }}
  ]}}
}


GET fias_houses/_search
{
  "query": {
    "bool": {
      "must": [
        {
          "match": {
            "postal_code": "430031"
          }
        },
        {"range": {
          "end_date": {
            "gte": "now"
          }
        }},
        {"match": {
          "ao_guid": "8ffad5fe-c0d5-4729-821f-fe84ab68a404"
        }}
      ]
    }
  }
}
# Не находится ao_guid 8ffad5fe-c0d5-4729-821f-fe84ab68a404
# 70 лет октябр


# Сущинского 36-3
GET fias_houses/_search
{
  "query": {
    "bool": {
      "must": [
        {
          "match": {
            "house_id": "2087e68e-4d40-4e5f-b2ac-4611096beaa9"
          }
        }
      ]
    }
  }
}

GET fias_houses/_search?q=ao_guid:c55eb639-4253-4708-aa1d-30e79def7abd

GET fias_klade/_search
{
  "query": {"bool": {"must": [
    {"match": {
      "": "2087e68e-4d40-4e5f-b2ac-4611096beaa9"
    }}
  ]}}
}

GET fias_klade/_mapping
GET fias_klade/_refresh
GET fias_klade/_search
{
  "query": {"exists": {"field": "act_status"}}
}

GET house-1/_search
{
  "query": {"exists": {"field": "cad_num"}}
}

# address
PUT fias_address/
{
    "settings" : {
        "codec": "best_compression",  
        "number_of_shards" : 1,
        "number_of_replicas" : 0,
        "index.refresh_interval": "-1"
    },
     "mappings" : {
      "properties" : {
        
        "act_status" : {
          "type" : "byte"
        },
        "ao_guid" : {
          "type" : "keyword"
        },
        "parent_guid" : {
            "type" : "keyword"
        },
        "ao_id" : {
          "type" : "keyword"
        },
        "prev_id" : {
          "type" : "keyword"
        },
         "next_id" : {
          "type" : "keyword"
        },
        "ao_level" : {
          "type" : "byte"
        },
        "area_code" : {
          "type" : "short"
        },
        "auto_code" : {
          "type" : "short"
        },
        "cent_status" : {
          "type" : "byte"
        },
        "city_code" : {
          "type" : "short"
        },
        "code" : {
          "type" : "long"
        },
        "city_ar_code" : {
          "type" : "short"
        },
        "curr_status" : {
          "type" : "byte"
        },
        "div_type" : {
          "type" : "short"
        },
        "end_date" : {
          "type" : "date"
        },
        "extr_code" : {
          "type" : "short"
        },
        "formal_name" : {
          "type" : "text"
        },
        "ifns_fl" : {
          "type" : "short"
        },
        "terr_ifns_fl" : {
          "type" : "short"
        },
        "ifns_ul" : {
          "type" : "short"
        },
        "terr_ifns_ul" : {
          "type" : "short"
        },
        "live_status" : {
          "type" : "byte"
        },
        "off_name" : {
          "type" : "keyword"
        },
        "okato" : {
          "type" : "long"
        },
        "oktmo" : {
          "type" : "long"
        },
        "oper_status" : {
          "type" : "byte"
        },
        "place_code" : {
          "type" : "short"
        },
        "plain_code" : {
          "type" : "long"
        },
        "plan_code" : {
          "type" : "short"
        },
        "postal_code" : {
          "type" : "long"
        },
        "region_code" : {
          "type" : "byte"
        },
        "sub_ext_code" : {
          "type" : "short"
        },
        "short_name" : {
          "type" : "keyword"
        },
        "start_date" : {
          "type" : "date"
        },
        "street_code" : {
          "type" : "short"
        },
        "update_date" : {
          "type" : "date"
        },
        "norm_doc" : {
          "type" : "keyword"
        }
      }  
  } 
}


GET fias_klade/_search
{
  "query": {"match": {
    "formal_name": "Сущинского"
  }}
}

GET fias_houses/_search
{
  "query": {"match_all": {}}
}

GET fias_klade/_search
{
  "query": {
    "bool": {
      "must": [
        {
          "match": {
            "off_name": "Сущинского"
          }
        }
      ],
      "filter": [
        {
          "term": {
            "act_status": "1"
          }
        },
        {
          "range": {
            "end_date": {
              "gte": "now"
            }
          }
        }
      ]
    }
  }
}



GET fias_houses/_search
{
  "query": {
    "bool": {
      "must": [
        {
          "match": {
            "ao_guid": "1c7dbd35-3f2f-4a43-8930-ac421850db30"
          }
        }
      ],
      "filter": [
        {
          "term": {
            "house_num": "36"
          }
        },
        {
          "term": {
            "build_num": "3"
          }
        },
        {
          "range": {
            "end_date": {
              "gte": "now"
            }
          }
        }
      ]
    }
  }
}


GET fias_klade/_search
{
  "query": {"match": {
    "ao_guid": "1ccfdc3c-be0f-4e42-ab4d-98f90de972d9"
  }}
}


GET fias_klade/_search
{
  "query": {
    "bool": {
      "must": [
        {
          "match": {
            "ao_level": "1"
          }
        }
      ],
      "filter": [
        {
          "term": {
            "ao_guid": "37a0c60a-9240-48b5-a87f-0d8c86cdb6e1"
          }
        },
        {
          "range": {
            "end_date": {
              "gte": "now"
            }
          }
        }
      ]
    }
  }
}

# Regions: (86)
GET addr_obj_new/_search
{
  "query": {
    "bool": {
      "must": [
        {
          "match": {
            "ao_level": "1"
          }
        },
        {
          "match": {
            "act_status": "1"
          }
        },
        {
          "match": {
            "curr_status": "0"
          }
        },
        {
          "match": {
            "live_status": "1"
          }
        }
      ]
    }
  }
}

GET region/_search

GET addr_obj_new/_search
{
  "query": {"match": {
    "ao_guid": "95dbf7fb-0dd4-4a04-8100-4f6c847564b5"
  }}
}

GET addr_obj_new/_search
{
  "query": {"match": {
    "code": "77000"
  }}
}

DELETE region
#REGION
PUT region/
{
    "settings" : {
        "number_of_shards" : 1,
        "number_of_replicas" : 0,
        "index.refresh_interval": "-1"
    },
     "mappings" : {
      "properties" : {
        
        "region_fias_id" : {
          "type" : "keyword"
        },
        "region_kladr_id" : {
          "type" : "long"
        },
        "region_type" : {
          "type" : "text"
        },
        "region" : {
          "type" : "text"
        },
        "region_with_type" : {
          "type" : "text"
        }
      }  
  } 
}
#Region
# Rename fields
POST _reindex
{
  "source": {
    "index": "addr_obj_new",
    "_source": ["ao_guid", "code", "short_name","formal_name"],
    "query": {
      "bool": {
      "must": [
        {
          "match": {
            "ao_level": "1"
          }
        },
        {
          "match": {
            "act_status": "1"
          }
        },
        {
          "match": {
            "curr_status": "0"
          }
        },
        {
          "match": {
            "live_status": "1"
          }
        }
      ]
      }
    }
  },
  "dest": {
    "index": "region"
  },
  "script": {
    "source":
   "ctx._source.region_fias_id = ctx._source.remove(\"ao_guid\");
    ctx._source.region_kladr_id = ctx._source.remove(\"code\");
    ctx._source.region_type = ctx._source.short_name;
    ctx._source.region = ctx._source.formal_name;
    ctx._source.region_with_type=ctx._source.remove(\"short_name\") + ' ' + ctx._source.remove(\"formal_name\")"
  }
}
GET region/_refresh
GET region/_search


# Areas: (1886)
GET addr_obj_new/_search
{
  "query": {
    "bool": {
      "must": [
        {
          "match": {
            "ao_level": "3"
          }
        },
        {
          "match": {
            "act_status": "1"
          }
        },
        {
          "match": {
            "live_status": "1"
          } 
        },
        {
          "match": {
            "curr_status": "0"
          }
        }
      ]
    }
  }
}
#Area 
POST _reindex
{
  "max_docs": 10,
  "source": {
    "index": "addr_obj_new",
    "_source": ["ao_guid", "code", "short_name","formal_name"],
   "query": {
    "bool": {
      "must": [
        {
          "match": {
            "ao_level": "3"
          }
        },
        {
          "match": {
            "act_status": "1"
          }
        },
        {
          "match": {
            "live_status": "1"
          } 
        },
        {
          "match": {
            "curr_status": "0"
          }
        }
      ]
    }
  } 
  },
  "dest": {
    "index": "area"
  },
  "script": {
    "source": "ctx._source.area_fias_id = ctx._source.remove(\"ao_guid\");ctx._source.area_kladr_id = ctx._source.remove(\"code\");ctx._source.area_type = ctx._source.short_name;ctx._source.area = ctx._source.formal_name;ctx._source.area_with_type=ctx._source.remove(\"short_name\") + ' ' + ctx._source.remove(\"formal_name\")"
  }
}

DELETE area
GET area/_refresh
GET area/_search
GET area/_mapping

# AREA
PUT area/
{
    "settings" : {
        "number_of_shards" : 1,
        "number_of_replicas" : 0,
        "index.refresh_interval": "-1"
    },
     "mappings" : {
      "properties" : {
        
        "area_fias_id" : {
          "type" : "keyword"
        },
        "area_kladr_id" : {
          "type" : "long"
        },
        "area_type" : {
          "type" : "text"
        },
        "area" : {
          "type" : "text"
        },
        "area_with_type" : {
          "type" : "text"
        }
      }  
  } 
}

# CITY
PUT city/
{
    "settings" : {
        "number_of_shards" : 1,
        "number_of_replicas" : 0,
        "index.refresh_interval": "-1"
    },
     "mappings" : {
      "properties" : {
        
        "city_fias_id" : {
          "type" : "keyword"
        },
        "city_kladr_id" : {
          "type" : "long"
        },
        "city_type" : {
          "type" : "text"
        },
        "city" : {
          "type" : "text"
        },
        "city_with_type" : {
          "type" : "text"
        }
      }  
  } 
}


#City 
POST _reindex
{
  "max_docs": 10,
  "source": {
    "index": "addr_obj_new",
    "_source": ["ao_guid", "code", "short_name","formal_name"],
   "query": {
    "bool": {
      "must": [
        {
          "match": {
            "ao_level": "4"
          }
        },
        {
          "match": {
            "act_status": "1"
          }
        },
        {
          "match": {
            "live_status": "1"
          } 
        },
        {
          "match": {
            "curr_status": "0"
          }
        }
      ]
    }
  } 
  },
  "dest": {
    "index": "city"
  },
  "script": {
    "source": "ctx._source.city_fias_id = ctx._source.remove(\"ao_guid\");ctx._source.city_kladr_id = ctx._source.remove(\"code\");ctx._source.city_type = ctx._source.short_name;ctx._source.city = ctx._source.formal_name;ctx._source.city_with_type=ctx._source.remove(\"short_name\") + ' ' + ctx._source.remove(\"formal_name\")"
  }
}

GET city/_refresh
GET city/_search
DELETE city

# CITY DISTRICT
PUT city_district/
{
    "settings" : {
        "number_of_shards" : 1,
        "number_of_replicas" : 0,
        "index.refresh_interval": "-1"
    },
     "mappings" : {
      "properties" : {
        
        "city_district_fias_id" : {
          "type" : "keyword"
        },
        "city_district_kladr_id" : {
          "type" : "long"
        },
        "city_district_type" : {
          "type" : "text"
        },
        "city_district" : {
          "type" : "text"
        },
        "city_district_with_type" : {
          "type" : "text"
        }
      }  
  } 
}
#City Distrinct
POST _reindex
{
  "max_docs": 10,
  "source": {
    "index": "addr_obj_new",
    "_source": ["ao_guid", "code", "short_name","formal_name"],
   "query": {
    "bool": {
      "must": [
        {
          "match": {
            "ao_level": "5"
          }
        },
        {
          "match": {
            "act_status": "1"
          }
        },
        {
          "match": {
            "live_status": "1"
          } 
        },
        {
          "match": {
            "curr_status": "0"
          }
        }
      ]
    }
  } 
  },
  "dest": {
    "index": "city_district"
  },
  "script": {
    "source": "ctx._source.city_district_fias_id = ctx._source.remove(\"ao_guid\");ctx._source.city_district_kladr_id = ctx._source.remove(\"code\");ctx._source.city_district_type = ctx._source.short_name;ctx._source.city_district = ctx._source.formal_name;ctx._source.city_district_with_type=ctx._source.remove(\"short_name\") + ' ' + ctx._source.remove(\"formal_name\")"
  }
}
GET city_district/_refresh
GET city_district/_search


# SETTLEMENT
PUT settlement/
{
    "settings" : {
        "number_of_shards" : 1,
        "number_of_replicas" : 0,
        "index.refresh_interval": "-1"
    },
     "mappings" : {
      "properties" : {
        
        "settlement_fias_id" : {
          "type" : "keyword"
        },
        "settlement_kladr_id" : {
          "type" : "long"
        },
        "settlement_type" : {
          "type" : "text"
        },
        "settlement" : {
          "type" : "text"
        },
        "settlement_with_type" : {
          "type" : "text"
        }
      }  
  } 
}
#Settlement
POST _reindex
{
  "max_docs": 10,
  "source": {
    "index": "addr_obj_new",
    "_source": ["ao_guid", "code", "short_name","formal_name"],
   "query": {
    "bool": {
      "must": [
        {
          "match": {
            "ao_level": "6"
          }
        },
        {
          "match": {
            "act_status": "1"
          }
        },
        {
          "match": {
            "live_status": "1"
          } 
        },
        {
          "match": {
            "curr_status": "0"
          }
        }
      ]
    }
  } 
  },
  "dest": {
    "index": "settlement"
  },
  "script": {
    "source": "ctx._source.settlement_fias_id = ctx._source.remove(\"ao_guid\");ctx._source.settlement_kladr_id = ctx._source.remove(\"code\");ctx._source.settlement_type = ctx._source.short_name;ctx._source.settlement = ctx._source.formal_name;ctx._source.settlement_with_type=ctx._source.remove(\"short_name\") + ' ' + ctx._source.remove(\"formal_name\")"
  }
}
GET settlement/_refresh
GET settlement/_search


# STREET
PUT street/
{
    "settings" : {
        "number_of_shards" : 1,
        "number_of_replicas" : 0,
        "index.refresh_interval": "-1"
    },
     "mappings" : {
      "properties" : {
        
        "street_fias_id" : {
          "type" : "keyword"
        },
        "street_kladr_id" : {
          "type" : "long"
        },
        "street_type" : {
          "type" : "text"
        },
        "street" : {
          "type" : "text"
        },
        "street_with_type" : {
          "type" : "text"
        }
      }  
  } 
}
#Street
POST _reindex
{
  "max_docs": 10,
  "source": {
    "index": "addr_obj_new",
    "_source": ["ao_guid", "code", "short_name","formal_name"],
   "query": {
    "bool": {
      "must": [
        {
          "match": {
            "ao_level": "7"
          }
        },
        {
          "match": {
            "act_status": "1"
          }
        },
        {
          "match": {
            "live_status": "1"
          } 
        },
        {
          "match": {
            "curr_status": "0"
          }
        }
      ]
    }
  } 
  },
  "dest": {
    "index": "street"
  },
  "script": {
    "source": "ctx._source.street_fias_id = ctx._source.remove(\"ao_guid\");ctx._source.street_kladr_id = ctx._source.remove(\"code\");ctx._source.street_type = ctx._source.short_name;ctx._source.street = ctx._source.formal_name;ctx._source.street_with_type=ctx._source.remove(\"short_name\") + ' ' + ctx._source.remove(\"formal_name\")"
  }
}
GET street/_refresh
GET street/_search


# HOUSE
PUT house/
{
    "settings" : {
        "number_of_shards" : 1,
        "number_of_replicas" : 0,
        "index.refresh_interval": "-1"
    },
     "mappings" : {
      "properties" : {
        
        "house_fias_id" : {
          "type" : "keyword"
        },
        "house_fias_parent_id" : {
          "type" : "keyword"
        },
        "house_num" : {
          "type" : "text"
        },
        "house_build_num" : {
          "type" : "keyword"
        },
        "house_str_num" : {
          "type" : "keyword"
        },
        "house_str_stat" : {
          "type" : "keyword"
        }
      }  
  } 
}

GET house-2345/_search
{
  "query": {"exists": {"field": "build_num"}}
}

DELETE house

#House
POST _reindex
{
  "max_docs": 10,
  "source": {
    "index": "house-1",
    "_source": ["house_guid", "ao_guid",  "house_num","build_num","str_num", "str_stat"],
   "query": {
        "range" : {
            "end_date": {
                "gte" : "now/d"
            }
        }
    }
  },
  "dest": {
    "index": "house"
  },
  "script": {
    "source": "ctx._source.house_fias_id = ctx._source.remove(\"house_guid\");ctx._source.house_fias_parent_id = ctx._source.remove(\"ao_guid\");ctx._source.house_build_num = ctx._source.remove(\"build_num\");ctx._source.house_str_num = ctx._source.remove(\"str_num\");ctx._source.house_str_state = ctx._source.remove(\"str_status\")"
  }
}
GET house/_refresh
GET house/_search

GET addr_obj_new/_search
{
  "query": {"bool": {"must": [
    {"match": {
      "act_status": "1"
    }},
    {"match": {
      "live_status": "1"
    }},
    {"match": {
      "curr_status": "0"
    }}
  ]}}
}

DELETE fias

# FIAS
PUT fias/
{
    "settings" : {
        "number_of_shards" : 1,
        "number_of_replicas" : 0,
        "index.refresh_interval": "-1"
    },
     "mappings" : {
      "properties" : {
        
        "fias_id" : {
          "type" : "keyword"
        },
        "fias_code" : {
          "type" : "long"
        },
        "kladr_id" : {
          "type" : "long"
        },
        "fias_level" : {
          "type" : "byte"
        },
        "fias_actuality_state" : {
          "type" : "text"
        },
        "capital_marker" : {
          "type" : "byte"
        },
        "postal_code" : {
          "type" : "integer"
        },
        "okato" : {
          "type" : "long"
        },
        "oktmo" : {
          "type" : "long"
        },
        "tax_office" : {
          "type" : "short"
        },
        "tax_office_legal" : {
          "type" : "short"
        }
        
      }  
  } 
}



#Fias
POST _reindex
{
  "max_docs": 10,
  "source": {
    "index": "addr_obj_new",
    "_source": ["ao_guid", "region_code", "area_code", "city_code", "place_code", "street_code",   "ao_level", "okato", "oktmo", "ifns_fl", "ifns_ul", "cent_status", "postal_code"],
  "query": {"bool": {"must": [
    {"match": {
      "act_status": "1"
    }},
    {"match": {
      "live_status": "1"
    }},
    {"match": {
      "curr_status": "0"
    }}
  ]}}
  },
  "dest": {
    "index": "fias"
  },
  "script": {
    "source": "ctx._source.fias_id = ctx._source.remove(\"ao_guid\");ctx._source.fias_code = ctx._source.remove(\"region_code\") + '' + ctx._source.remove(\"area_code\") +''+ ctx.source.remove(\"city_code\") +''+ ctx._source.remove(\"city_code\") + '' + ctx._source.remove(\"place_code\") +''+ ctx._source.remove(\"street_code\");ctx._source.fias_level = ctx._source.remove(\"ao_level\");ctx._source.tax_office = ctx._source.remove(\"ifns_fl\");ctx._source.tax_office_legal = ctx._source.remove(\"ifns_ul\")"
  }
}
GET house/_refresh
GET house/_search

# =============================================
POST _reindex
{
  "max_docs": 10,
  "source": {
    "index": "addr_obj_new",
    "_source": ["ao_guid", "region_code",
    "area_code", "city_code",
    "place_code",  
    "ao_level", "street_code",
    "okato", "oktmo", "ifns_fl", "ifns_ul", "cent_status", "postal_code"],
  "query": {"bool": {"must": [
    {"match": {
      "act_status": "1"
    }},
    {"match": {
      "live_status": "1"
    }},
    {"match": {
      "curr_status": "0"
    }}
  ]}}
  },
  "dest": {
    "index": "fias"
  },
  "script": {
    "source": "ctx._source.fias_id = ctx._source.remove(\"ao_guid\");ctx._source.fias_level = ctx._source.remove(\"ao_level\");ctx._source.tax_office = ctx._source.remove(\"ifns_fl\");ctx._source.tax_office_legal = ctx._source.remove(\"ifns_ul\");ctx._source.fias_code = ctx._source.remove(\"region_code\") + ctx._source.remove(\"area_code\") + ctx._source.remove(\"city_code\") + ctx._source.remove(\"place_code\") +  ctx._source.remove(\"street_code\")"
  }
}
GET fias/_refresh
GET fias/_search

GET addr_obj_new/_search
{
  "query": {"exists": {"field": "oktmo"}}
}

GET addr_obj_new/_search
{
  "query": {"bool": {"must": [
    {"match": {
      "ao_level": "7"
    }}
  ]}}
}


GET addrobj/_search

POST _reindex
{
  "source": {
    "index": "addr_obj"
  },
  "dest": {
    "index": "addr_obj_new"
  }
}
GET _tasks?actions=*reindex
GET _tasks/ByHpNTcITOKv51msEb6iVQ:335848


GET addrobj-01/_refresh
GET addrobj-01/_count

GET addrobject/_count

GET addrobject/_search
{
    "query": {
        "match" : {
            "offname": {
                "query" : "Саранск"
            }
        }
    }
}

POST /_reindex
{
  "source": {
    "index": "addr-*"
  },
  "dest": {
    "index": "addr_obj"
  }
}

GET _tasks?actions=*reindex



GET _tasks/ByHpNTcITOKv51msEb6iVQ:300292


 
  
GET addrobj/_search?q=aoguid:f603091b-7f3f-402d-8381-7cc079916b33



GET addrobj/_search
{
  "query": {
    "match": {
      "aoguid": "f603091b-7f3f-402d-8381-7cc079916b33"
    }
  }
}

GET addr_obj/_search
{
  "query": {
    "match": {
      "off_name": "Саранск"
    }
  }
}

GET addrobj/_search
{
  "query": {
    "match": {
      "offname": {
        "query": "саранск москва",
        "operator": "and"
      }
    }
  }
}




GET addrobj/_search
{
  "query": {
    "bool": {
      "must": [
        {"match": {
          "offname": "Саранск"
        }},
        {"match": {
          "livestatus": "1"
        }}
      ]
    }
  }
}

GET addrobj/_search
{
  "query": {
    "bool": {
      "must": [
        {"match": {
          "offname": "Саранск"
        }},
        {"match": {
          "livestatus": "1"
        }}
      ],
      "filter": [
        {"term": {"shortname":"г"}}
        ]
      
    }
  }
}

# Поиск по GUID и livestatus
GET addrobj/_search
{
  "query": {
    "bool": {
      "must": [
        {"match": {
          "aoguid": "1ccfdc3c-be0f-4e42-ab4d-98f90de972d9"
        }}
      ],
      "filter": [
        {"term":{"livestatus":"1"}}]
    }
  }
}

# Документы с регионом 13, статусом - live 
# с наменованием Рузаевка.
GET addrobj/_search
{
  "query": {
    "bool": {
      "must": [
        {"match": {
          "regioncode": "13"
        }},
        {"match": {
          "shortname": "г"
        }},
        {"match": {
          "livestatus": "1"
        }},
        {"match": {
          "offname": "Рузаевка"
        }}
        
      ]
    }
  }
}

# Все документы с регионом 13
GET addr_obj/_search
{
  "query": {
     "term": {
       "region_code": {
         "value": "13",
         "boost": 1.0
       }
     }
  }
}

# Все документы у которых есть поле "regioncode"
GET house-1/_search
{
  "query": {
    "exists": {
      "field": "ifns_fl"
    }
  }
}

# Все документы, у которых отсуствует поле "code"
GET house-1/_search
{
  "query": {
    "bool": {
      "must_not": {
        "exists": {
          "field": "code"
        }
      }
    }
  }
}

# Fuzzy search 
# Тур (Сур-Дур, Селенга-Тур)
GET addrobj/_search
{
  "query": {
    "fuzzy": {
      "offname": {
        "value": "тур"
      }
    }
  }
}

# Поиск по id
GET addrobj/_search
{
  "query": {
    "ids": {
      "values": ["B5Cr_20BQC_JQpX5BEEc", "_gd84G0BJcrM5DdV1CP8", "bwd84G0BJcrM5DdV2Sfn"]
    }
  }
}


# Поиск полей по префиксу (работает только для не текстовых полей)
#  Поиск по полю ОКАТО начинающися с "300"
GET addrobj/_search
{
  "query": {
    "prefix": {
      "okato": {
        "value": "300"
      }
    }
  }
}


# Ранжированый поиск
# по диапазону значений
GET addrobj/_search
{
  "query": {
    "range": {
      "regioncode": {
        "gte": 13,
        "lte": 13
      }
    }
  }
}


# Поиск по термину (для не текстовых полей) - точное совпадение.
# Для текстовых полей нужно использовать mutch
GET addrobj/_search
{
  "query": {
    "term": {
      "livestatus": {
        "value": "1"
      }
    }
  }
}

# Terms query. Поиск по нескольким значениям
GET addrobj/_search
{
  "query": {
    "terms": {
      "regioncode": [
        "13",
        "86"
      ]
    }
  }
}

# Scroll.
POST addrobj/_search?scroll=3m
{
  "size": 20
  , "query": {
    "match": {
      "regioncode": "13"
    }
  }
}

# Scroll. Get next result
POST /_search/scroll
{
  "scroll": "1m",
  "scroll_id": "DXF1ZXJ5QW5kRmV0Y2gBAAAAAAAiOKgWQnlIcE5UY0lUT0t2NTFtc0ViNmlWUQ=="
}

# Проверка на наличие документов 
# Fast check any matching docs
# Если документы есть, поле hits.total > 0
GET addrobj/_search?q=regioncode:13&size=0&terminate_after=1


# Doc-value fields:
# https://www.elastic.co/guide/en/elasticsearch/reference/current/doc-values.html
GET addrobj/_search
{
  "query": {
    "match_all": {}
  },
  "docvalue_fields": [
   {"field": "updatedate",
     "format":"epoch_millis"
   }
    ]
}

# Count API
# Gets number of matches for a search query.
GET addrobj/_count?q=offname:Саранск


# https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-body.html#request-body-search-scroll

GET addrobj/_search

GET addrobj/_search
{
  "query": {
    "bool": {
      "must": [
        {"match": {
          "regioncode": "47"
        }},
        {"match": {
          "areacode": "005"
        }},
        {"match": {
          "citycode": "000"
        }},
        {"match": {
          "placecode": "055"
        }},
        {"match": {
          "aolevel": "65"
        }}
      ]
    }
  }
}

GET addrobj/_search
{
  "query": {"match": {
    "aoguid": "90bb3d5d-c9bf-4cfc-92e2-bfaadabf1073"
  }}
}



GET addrobj/_search
{
  "query": {
    "exists": {"field": "parentguid"}
  }
}

GET addrobj/_search
{
  "query": {
    "match": {
      "aoguid": "2ad438fc-912d-40de-b330-0fb2dd7d56b6"
    }
  }
}

# BACUP:

# Put in config (/usr/local/etc/elasticsearch/):
# Backup repo:
# path.repo: /Volumes/DATA/elasticsearch_backup/



DELETE /_snapshot/my_backup/snapshot_1
# Register repo:
PUT /_snapshot/my_backup
{
  "type": "fs",
  "settings": {
    "compress": "true",
    "location": "/Volumes/DATA/elasticsearch_backup"
  }
}
#Start:
PUT /_snapshot/my_backup/snapshot_1?wait_for_completion=true

GET /_snapshot/_status
GET /_snapshot/my_backup/snapshot_1/_status
GET /_snapshot/my_backup/

GET _tasks?actions=*create
GET _tasks/ByHpNTcITOKv51msEb6iVQ:1784

#===============================================
# RESTORE:

POST /_snapshot/my_backup/snapshot_1/_restore
{
  "indices": "fias_klade,fias_houses"
}


# ============================================

GET addr_obj/_search
 {
   "query": {
     "match": {
       "ao_guid": "bbd6b0fd-f09e-4a0a-8a85-670e0103427d"
     }
   }
 }
